#!/usr/bin/env node

const _ = require('lodash')
const async = require('async')
const chalk = require('chalk')
const clear = require('clear')
const inquirer = require('inquirer')
const program = require('commander')

// Lib
const logger = require('../src/lib/logger')
const utils = require('../src/lib/utils')
const greet = require('../src/lib/greet')
const goodbye = require('../src/lib/goodbye')
const defaults = require('../src/lib/defaults')

// Tasks
const check = require('../src/tasks/check')

// Builders
const build = require('../src/build')

// -----------------------------------------------------
// Help
// -----------------------------------------------------
program.usage('[project-name]')

program.on('--help', function () {
  console.log('  Examples:')
  console.log('')
  console.log(chalk.gray('    # create a custom Swanky Docs project'))
  console.log('    $ swanky init my-project')
  console.log('')
})

program.parse(process.argv)

// -----------------------------------------------------
// Start
// -----------------------------------------------------
function run(callback) {
  ask((results) => {
    results.nameNormalized = _.kebabCase(results.name);

    build(results, () => {
      logger.head('4. Documentation generated successfully')
      goodbye()
      callback()
    })
  })
}

async.series([
  function(callback) {
    clear() // clear the console

    greet()
    callback()
  },
  function(callback) {
    check(callback)
  },
  function(callback) {
    logger.head('1. Configuring documentation.')
    run(callback)
  }
], () => {
  console.log('totes complete!')
})

// -----------------------------------------------------
// Prompts
// -----------------------------------------------------
function ask(callback) {

  const questions = [
    {
      name: 'name',
      type: 'input',
      message: 'Project name:',
      default: defaults.NAME
    },
    {
      type: 'input',
      name: 'src',
      message: 'Documentation SOURCE directory:',
      default: defaults.SOURCE
    },
    {
      type: 'input',
      name: 'output',
      message: 'Documentation OUTPUT directory:',
      default: defaults.OUTPUT
    },
    {
      type: 'input',
      name: 'author',
      message: 'Author:'
    },
    {
      type: 'list',
      name: 'theme',
      message: 'Starter theme:',
      choices: defaults.THEMES,
      default: 'swanky-docs/swanky-theme'
    },
    {
      type: 'checkbox',
      name: 'processors',
      message: 'Processors:',
      choices: defaults.PROCESSORS,
      default: null
    },
    {
      type: 'confirm',
      name: 'demo',
      message: 'Demo pattern library:',
      default: false
    }
  ]

  inquirer.prompt(questions).then(callback)
}
